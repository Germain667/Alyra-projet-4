{
  "contractName": "BlockCarLib",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "LogDepositReceived",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "inputs": [],
      "name": "withdrawal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"LogDepositReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Germain Winckel\",\"details\":\"The blockCar contract code\",\"events\":{\"LogDepositReceived(address)\":{\"details\":\"An event when a deposit is received\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"BlockCar\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"The blockCar contract code\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/BlockCarLib.sol\":\"BlockCarLib\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/contracts/BlockCarLib.sol\":{\"keccak256\":\"0x6dd0579350fa6a088d97b9556021911720d76bb59571bcf18ccfcf8a37c53518\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2bd865a2bb4b9078c28a22a3bed33094f1f482cb2e6adecfaa2cdfbd23850436\",\"dweb:/ipfs/QmetvhoEkiEdK5EyDD5d6XPRHS8xP8XJ7xcF5iwoLKPqBb\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.18;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/**\n * @title BlockCar\n * @author Germain Winckel\n * @notice The blockCar contract code\n * @dev The blockCar contract code\n */\nabstract contract BlockCarLib is Ownable{\n\n\n    /**\n    * @dev Others informations we need for sell the car\n    */\n    struct InfosForSale {\n      \tuint32 mileage;\n      \tuint32 price;\n      \tuint32 localisation;\n      \tstring contactDetails;\n    }\n\n    /// @dev An event when a deposit is received\n    event LogDepositReceived (address _address);\n\n\n    \n\n    fallback() external payable { \n        require(msg.data.length == 0);\n        emit LogDepositReceived(msg.sender); \n    }\n \n    receive() external payable { \n        emit LogDepositReceived(msg.sender); \n    }\n\n    function withdrawal() public onlyOwner {\n        require(address(this).balance >= 1, \"You need at least 1 ETH to withdraw\");\n        (bool sent, )                   = payable(msg.sender).call{value: address(this).balance}(\"\");\n        require(sent, unicode\"transfer didn't work\");\n    }\n}",
  "sourcePath": "/home/germain/Projet4/truffle/contracts/BlockCarLib.sol",
  "ast": {
    "absolutePath": "project:/contracts/BlockCarLib.sol",
    "exportedSymbols": {
      "BlockCarLib": [
        3948
      ],
      "Context": [
        1677
      ],
      "Ownable": [
        112
      ]
    },
    "id": 3949,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3864,
        "literals": [
          "solidity",
          "0.8",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:14"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 3865,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3949,
        "sourceUnit": 113,
        "src": "57:52:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 3867,
              "name": "Ownable",
              "nameLocations": [
                "271:7:14"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 112,
              "src": "271:7:14"
            },
            "id": 3868,
            "nodeType": "InheritanceSpecifier",
            "src": "271:7:14"
          }
        ],
        "canonicalName": "BlockCarLib",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 3866,
          "nodeType": "StructuredDocumentation",
          "src": "111:126:14",
          "text": " @title BlockCar\n @author Germain Winckel\n @notice The blockCar contract code\n @dev The blockCar contract code"
        },
        "fullyImplemented": true,
        "id": 3948,
        "linearizedBaseContracts": [
          3948,
          112,
          1677
        ],
        "name": "BlockCarLib",
        "nameLocation": "256:11:14",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "BlockCarLib.InfosForSale",
            "id": 3877,
            "members": [
              {
                "constant": false,
                "id": 3870,
                "mutability": "mutable",
                "name": "mileage",
                "nameLocation": "393:7:14",
                "nodeType": "VariableDeclaration",
                "scope": 3877,
                "src": "386:14:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 3869,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "386:6:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3872,
                "mutability": "mutable",
                "name": "price",
                "nameLocation": "416:5:14",
                "nodeType": "VariableDeclaration",
                "scope": 3877,
                "src": "409:12:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 3871,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "409:6:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3874,
                "mutability": "mutable",
                "name": "localisation",
                "nameLocation": "437:12:14",
                "nodeType": "VariableDeclaration",
                "scope": 3877,
                "src": "430:19:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 3873,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "430:6:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3876,
                "mutability": "mutable",
                "name": "contactDetails",
                "nameLocation": "465:14:14",
                "nodeType": "VariableDeclaration",
                "scope": 3877,
                "src": "458:21:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 3875,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "458:6:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "InfosForSale",
            "nameLocation": "364:12:14",
            "nodeType": "StructDefinition",
            "scope": 3948,
            "src": "357:129:14",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 3878,
              "nodeType": "StructuredDocumentation",
              "src": "492:44:14",
              "text": "@dev An event when a deposit is received"
            },
            "eventSelector": "15382559391789f1865e10e9c8b51327a9cb0381eae89973ada229e7a78c08f3",
            "id": 3882,
            "name": "LogDepositReceived",
            "nameLocation": "547:18:14",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3881,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3880,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "575:8:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 3882,
                  "src": "567:16:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3879,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "567:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "566:18:14"
            },
            "src": "541:44:14"
          },
          {
            "body": {
              "id": 3898,
              "nodeType": "Block",
              "src": "626:93:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3890,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "expression": {
                              "id": 3886,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "645:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3887,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "649:4:14",
                            "memberName": "data",
                            "nodeType": "MemberAccess",
                            "src": "645:8:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          "id": 3888,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "654:6:14",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "645:15:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 3889,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "664:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "645:20:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3885,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "637:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "637:29:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3892,
                  "nodeType": "ExpressionStatement",
                  "src": "637:29:14"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3894,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "700:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "704:6:14",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "700:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3893,
                      "name": "LogDepositReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3882,
                      "src": "681:18:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "681:30:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3897,
                  "nodeType": "EmitStatement",
                  "src": "676:35:14"
                }
              ]
            },
            "id": 3899,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3883,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "606:2:14"
            },
            "returnParameters": {
              "id": 3884,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "626:0:14"
            },
            "scope": 3948,
            "src": "598:121:14",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3907,
              "nodeType": "Block",
              "src": "753:54:14",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3903,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "788:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "792:6:14",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "788:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3902,
                      "name": "LogDepositReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3882,
                      "src": "769:18:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "769:30:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3906,
                  "nodeType": "EmitStatement",
                  "src": "764:35:14"
                }
              ]
            },
            "id": 3908,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3900,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "733:2:14"
            },
            "returnParameters": {
              "id": 3901,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "753:0:14"
            },
            "scope": 3948,
            "src": "726:81:14",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3946,
              "nodeType": "Block",
              "src": "852:247:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3920,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 3916,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "878:4:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BlockCarLib_$3948",
                                  "typeString": "contract BlockCarLib"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BlockCarLib_$3948",
                                  "typeString": "contract BlockCarLib"
                                }
                              ],
                              "id": 3915,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "870:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3914,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "870:7:14",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3917,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "870:13:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 3918,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "884:7:14",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "870:21:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 3919,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "895:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "870:26:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206e656564206174206c6561737420312045544820746f207769746864726177",
                        "id": 3921,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "898:37:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_15c70d6f7c60d45e71df14184203840781b9dc7c2003b1d36a22968decab8803",
                          "typeString": "literal_string \"You need at least 1 ETH to withdraw\""
                        },
                        "value": "You need at least 1 ETH to withdraw"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_15c70d6f7c60d45e71df14184203840781b9dc7c2003b1d36a22968decab8803",
                          "typeString": "literal_string \"You need at least 1 ETH to withdraw\""
                        }
                      ],
                      "id": 3913,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "862:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "862:74:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3923,
                  "nodeType": "ExpressionStatement",
                  "src": "862:74:14"
                },
                {
                  "assignments": [
                    3925,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3925,
                      "mutability": "mutable",
                      "name": "sent",
                      "nameLocation": "952:4:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 3946,
                      "src": "947:9:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3924,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "947:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 3940,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 3938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1035:2:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3928,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "988:3:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3929,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "992:6:14",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "988:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3927,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "980:8:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 3926,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "980:8:14",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3930,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "980:19:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 3931,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1000:4:14",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "980:24:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 3937,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 3934,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "1020:4:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BlockCarLib_$3948",
                                  "typeString": "contract BlockCarLib"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BlockCarLib_$3948",
                                  "typeString": "contract BlockCarLib"
                                }
                              ],
                              "id": 3933,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1012:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3932,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1012:7:14",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3935,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1012:13:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 3936,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1026:7:14",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "1012:21:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "980:54:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 3939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "980:58:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "946:92:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3942,
                        "name": "sent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3925,
                        "src": "1056:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7472616e73666572206469646e277420776f726b",
                        "id": 3943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "unicodeString",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1062:29:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f070858428ca968c9c2736919a99bff8aa3dd048c29cab041e6e912a34bb713e",
                          "typeString": "literal_string \"transfer didn't work\""
                        },
                        "value": "transfer didn't work"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f070858428ca968c9c2736919a99bff8aa3dd048c29cab041e6e912a34bb713e",
                          "typeString": "literal_string \"transfer didn't work\""
                        }
                      ],
                      "id": 3941,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1048:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1048:44:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3945,
                  "nodeType": "ExpressionStatement",
                  "src": "1048:44:14"
                }
              ]
            },
            "functionSelector": "d4e93292",
            "id": 3947,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3911,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3910,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "842:9:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "842:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "842:9:14"
              }
            ],
            "name": "withdrawal",
            "nameLocation": "822:10:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3909,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "832:2:14"
            },
            "returnParameters": {
              "id": 3912,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "852:0:14"
            },
            "scope": 3948,
            "src": "813:286:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 3949,
        "src": "238:863:14",
        "usedErrors": []
      }
    ],
    "src": "32:1069:14"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.18+commit.87f61d96.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.13",
  "updatedAt": "2023-03-30T15:25:42.093Z",
  "devdoc": {
    "author": "Germain Winckel",
    "details": "The blockCar contract code",
    "events": {
      "LogDepositReceived(address)": {
        "details": "An event when a deposit is received"
      }
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "BlockCar",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "The blockCar contract code",
    "version": 1
  }
}